{"version":3,"sources":["components/Person.js","components/People.js","components/NewPerson.js","components/Search.js","components/notification/Notification.js","services/formParser.js","services/phonebookService.js","services/filtration.js","services/notify.js","components/App.js","index.js"],"names":["Person","person","deletePerson","name","number","onClick","People","persons","map","id","key","NewPerson","addPerson","setNewName","setNewNumber","newName","newNumber","onSubmit","value","onChange","event","target","required","type","Search","search","setSearch","Notification","message","className","formParser","updatePerson","formInfo","formatOk","error","handleError","match","setNotification","setTimeout","forEach","toLowerCase","window","confirm","newPerson","replace","trim","baseUrl","getAll","a","request","axios","get","res","data","createPerson","post","put","delete","filterPeople","regex","RegExp","filter","notify","notification","App","useState","setPersons","useEffect","phonebookService","then","catch","response","preventDefault","returnedPerson","concat","err","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.617ac837.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Person = ({ person, deletePerson }) => (\n  <div>\n    {person.name}\n    <span>\n      {person.number} <button onClick={deletePerson}>delete</button>\n    </span>\n  </div>\n);\n\nexport default Person;\n","import React from \"react\";\nimport Person from \"./Person\";\n\nconst People = ({ persons, deletePerson }) => (\n  <>\n    {persons.map((person) => (\n      <Person\n        deletePerson={() => deletePerson(person.id, person.name)}\n        key={person.id}\n        person={person}\n      />\n    ))}\n  </>\n);\nexport default People;\n","import React from \"react\";\n\nconst NewPerson = ({\n  addPerson,\n  setNewName,\n  setNewNumber,\n  newName,\n  newNumber,\n}) => (\n  <>\n    <form onSubmit={addPerson}>\n      <div>\n        name:{\" \"}\n        <input\n          value={newName}\n          onChange={(event) => setNewName(event.target.value)}\n          required\n        />\n      </div>\n      <br />\n      <div>\n        number:{\" \"}\n        <input\n          value={newNumber}\n          onChange={(event) => setNewNumber(event.target.value)}\n          required\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  </>\n);\n\nexport default NewPerson;\n","import React from \"react\";\n\nconst Search = ({ search, setSearch }) => (\n  <div>\n    search:{\" \"}\n    <input value={search} onChange={(event) => setSearch(event.target.value)} />\n  </div>\n);\n\nexport default Search;\n","import React from \"react\";\nimport \"./notification.css\";\n\nconst Notification = ({ message = null, type }) => {\n  if (message === null) return null;\n\n  return <div className={`${type} notification`}>{message}</div>;\n};\n\nexport default Notification;\n","const formParser = (newNumber, newName, persons, updatePerson) => {\n  const formInfo = {\n    formatOk: true,\n    error: \"\",\n    handleError: \"\",\n    name: \"\",\n    number: \"\",\n  };\n  if (newNumber.match(/[^\\d-()]/gm) !== null) {\n    formInfo.formatOk = false;\n    formInfo.handleError = (setNotification) => {\n      setNotification({\n        message: \"Number must only contain characters 0-9()-\",\n        type: \"error\",\n      });\n      setTimeout(() => {\n        setNotification({ message: null, type: \"success\" });\n      }, 10000);\n    };\n    formInfo.error = \"number\";\n    return formInfo;\n  }\n  persons.forEach((person) => {\n    if (person.name.toLowerCase() === newName.toLowerCase()) {\n      formInfo.formatOk = false;\n      formInfo.handleError = () => {\n        const confirmation = window.confirm(\n          `${newName} is already in the phonebook, would you like to replace the old number?`\n        );\n        if (confirmation) {\n          const newPerson = { ...person, number: newNumber };\n          updatePerson(person.id, newPerson);\n        }\n      };\n      formInfo.error = \"name\";\n      return formInfo;\n    }\n    if (\n      person.number.replace(/[()-]/gm, \"\") === newNumber.replace(/[()-]/gm, \"\")\n    ) {\n      formInfo.formatOk = false;\n      formInfo.handleError = (setNotification) => {\n        setNotification({\n          message: `${newNumber} is already in the phonebook`,\n          type: \"error\",\n        });\n        setTimeout(\n          () => setNotification({ message: null, type: \"success\" }),\n          5000\n        );\n      };\n      formInfo.error = \"number\";\n      return formInfo;\n    }\n  });\n  formInfo.name = newName.trim();\n  formInfo.number = newNumber.replace(/\\s/gm, \"\");\n  return formInfo;\n};\n\nexport default formParser;\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/persons\";\n\nconst getAll = async () => {\n  const request = axios.get(baseUrl);\n  const res = await request;\n  return res.data;\n};\n\nconst createPerson = async (newPerson) => {\n  const request = axios.post(baseUrl, newPerson);\n  const res = await request;\n  return res.data;\n};\n\nconst updatePerson = async (id, newPerson) => {\n  const request = axios.put(`${baseUrl}/${id}`, newPerson);\n  const res = await request;\n  return res.data\n};\n\nconst deletePerson = async (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  const res = await request;\n  return res;\n};\n\nexport default { getAll, createPerson, updatePerson, deletePerson };\n","const filterPeople = (search, persons) => {\n  const regex = new RegExp(search.trim(), \"i\");\n  return persons.filter((person) => person.name.match(regex) !== null);\n};\n\nexport default filterPeople;\n","const notify = (setNotification, notification) => {\n    setNotification(notification)\n    setTimeout(() => setNotification({message: null, type: \"success\"}), 10000)\n}\n\nexport default notify;","import React, { useState, useEffect } from \"react\";\nimport People from \"./People\";\nimport NewPerson from \"./NewPerson\";\nimport Search from \"./Search\";\nimport Notification from \"./notification/Notification\";\nimport formParser from \"../services/formParser\";\nimport phonebookService from \"../services/phonebookService\";\nimport filterPeople from \"../services/filtration\";\nimport notify from \"../services/notify\"\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [notification, setNotification] = useState({\n    message: null,\n    type: \"success\",\n  });\n\n  useEffect(() => {\n    phonebookService.getAll().then(res => setPersons(res))\n  }, []);\n\n  const updatePerson = (id, newPerson) => {\n    phonebookService\n      .updatePerson(id, newPerson)\n      .then((res) => {\n        setPersons(persons.map((person) => (person.id !== id ? person : res)));\n        setNewNumber(\"\");\n        notify(setNotification, {type: 'success', message: `Updated ${res.name}`})\n      })\n      .catch((error) => {\n        if (error.response.data.type=== 'notFound')\n          setPersons(persons.filter(person => person.id !== id))\n        setNewNumber(\"\");\n        notify(setNotification, {\n          message: error.response.data.error,\n          type: \"error\",})\n      });\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const formInfo = formParser(newNumber, newName, persons, updatePerson);\n    if (formInfo.formatOk) {\n      const newPerson = {\n        name: formInfo.name,\n        number: formInfo.number,\n      };\n\n      phonebookService.createPerson(newPerson).then((returnedPerson) => {\n        setPersons(persons.concat(returnedPerson));\n        setNewName(\"\");\n        setNewNumber(\"\");\n        notify(setNotification, {type: 'success', message: `Added ${returnedPerson.name}`})\n      })\n      .catch(err => {\n        notify(setNotification, {message: err.response.data.error, type: 'error'})\n      });\n    } else {\n      formInfo.error === \"number\" ? setNewNumber(\"\") : setNewName(\"\");\n      formInfo.handleError(setNotification);\n    }\n  };\n\n  const deletePerson = (id, name) => {\n    const confirmed = window.confirm(`delete ${name}?`);\n    if (confirmed) {\n      phonebookService\n        .deletePerson(id)\n        .then(() => {\n          setPersons(persons.filter((person) => person.id !== id));\n          notify(setNotification, {type: 'success', message: `Deleted ${name}`})\n        })\n        .catch((err) => {\n          notify(setNotification, {message: err.message, type: 'error'})\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={notification.message} type={notification.type} />\n      <Search search={search} setSearch={setSearch} />\n      <h2>Add a new</h2>\n      <NewPerson\n        addPerson={addPerson}\n        setNewName={setNewName}\n        setNewNumber={setNewNumber}\n        newName={newName}\n        newNumber={newNumber}\n      />\n      <h2>Numbers</h2>\n      <People\n        deletePerson={deletePerson}\n        persons={filterPeople(search, persons)}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}